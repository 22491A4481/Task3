import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error
import scipy.sparse
from sklearn.preprocessing import OneHotEncoder

# Step 1: Load your dataset
data = pd.read_csv('/content/carprice.csv')  # Ensure it has 'car_name' and 'price' columns

# Step 2: Text preprocessing and feature extraction
tfidf = TfidfVectorizer(lowercase=True, stop_words='english')
X_text = tfidf.fit_transform(data['Car_Name'])

# Step 3: Combine with other features if available (e.g., Transmission, Fuel_Type)
X_other = data[['Transmission', 'Fuel_Type']].values

# Convert X_other to a sparse matrix
encoder = OneHotEncoder(sparse_output=True)  # Use sparse_output for recent versions
X_other_sparse = encoder.fit_transform(X_other)

# Step 4: Combine the text and other features
X = scipy.sparse.hstack((X_text, X_other_sparse))

y = data['Selling_Price']  # Target variable

# Step 5: Split the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 6: Train the model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 7: Make predictions and evaluate
predictions = model.predict(X_test)
mae = mean_absolute_error(y_test, predictions)

print(f'Mean Absolute Error: {mae}')
